name: Detect Modified Paths

on:
  workflow_call:
    inputs:
      root-path:
        type: string
        description: |
          The root path to detect changes under. Outputs will be the direct descendent
          folders of this path.

      sentinel-paths:
        type: string
        description: |
          Newline-delimited list of files which cause all paths to be considered modified.

      force-all:
        type: string
        description: Whether to force all paths to be considered modified.
        default: "false"

    outputs:
      path:
        description: List of paths that have been modified
        value: ${{ jobs.generate-modified-path-matrix.outputs.path }}

jobs:
  modified-paths:
    runs-on: ubuntu-latest
    outputs:
      path: ${{ steps.modified-dirs.outputs.all_changed_files }}
      any: ${{ steps.modified-dirs.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
      - uses: tj-actions/changed-files@v44
        id: modified-dirs
        with:
          matrix: true
          dir_names: true
          dir_names_max_depth: 2
          files: |
            ${{ inputs.root-path }}/**

  modified-sentinels:
    runs-on: ubuntu-latest
    outputs:
      modified: ${{ steps.modified-dirs.outputs.all_changed_files }}
      changed-count: ${{ steps.modified-dirs.outputs.all_changed_files_count }}
    steps:
      - uses: actions/checkout@v4
      - uses: tj-actions/changed-files@v44
        id: modified-dirs
        with:
          files: ${{ inputs.sentinel-paths }}

  generate-modified-path-matrix:
    runs-on: ubuntu-latest
    needs: [modified-paths, modified-sentinels]
    outputs:
      path: ${{ steps.generate-modified-path-matrix.outputs.path }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate path matrix
        id: generate-modified-path-matrix
        working-directory: ${{ inputs.root-path }}
        run: |
          if [ "${{ needs.modified-sentinels.outputs.modified }}" != "[]" ] || [ "${{ inputs.force-all }}" = "true" ]; then
            all_paths=$(jq -c -n '$ARGS.positional' --args "$(find ./* -maxdepth 0 -type d)")
            echo "path=$all_paths" >> "$GITHUB_OUTPUT"
          else
            path=$(echo '${{ needs.modified-paths.outputs.path }}' | jq -c 'map(select(. | test("^${{ inputs.root-path }}/"))) | map(sub("^${{ inputs.root-path }}/"; ""))')
            echo "path=$path" >> "$GITHUB_OUTPUT"
          fi
