name: Reusable Docker Push Workflow
on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: >
          The sub-directory to run commands out of
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
        description: >
          The name of the environment to run on. This defaults to
          'ubuntu-latest'
      login:
        required: false
        type: boolean
        default: false
        description: Whether to run `make docker-login`
      build:
        required: false
        type: boolean
        default: true
        description: Whether to run "make build"
      push:
        required: false
        type: boolean
        default: true
        description: Whether to run "make push"
    outputs:
      image-tag:
        description: "The image tag"
        value: ${{ jobs.build-and-push.outputs.image-tag }}
    secrets:
      ECR_PUSH_ROLE_ARN:
        required: true
      POETRY_HTTP_BASIC_SCHIRESON_USERNAME:
        required: false
      POETRY_HTTP_BASIC_SCHIRESON_PASSWORD:
        required: false
      POETRY_HTTP_BASIC_KNOWN_USERNAME:
        required: false
      POETRY_HTTP_BASIC_KNOWN_PASSWORD:
        required: false
jobs:
  build-and-push:
    runs-on: ${{ inputs.runs-on }}
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working-directory }}
    outputs:
      image-tag: ${{ steps.get-image-tag.outputs.image-tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Get image tag
        id: get-image-tag
        run: |
          IMAGE_TAG=$(git rev-parse --short=8 HEAD)
          echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2
      - name: Configure ECR AWS Credentials
        if: ${{ inputs.runs-on != 'self-hosted' && inputs.push }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ECR_PUSH_ROLE_ARN }}
          role-session-name: ${{ github.run_id }}
          aws-region: us-east-1

      - name: ECR Login
        if: ${{ inputs.login || inputs.push }}
        run: |
          make docker-login

      - name: Build Docker Images
        if: ${{ inputs.build }}
        env:
          POETRY_HTTP_BASIC_SCHIRESON_USERNAME: ${{ secrets.POETRY_HTTP_BASIC_SCHIRESON_USERNAME }}
          POETRY_HTTP_BASIC_SCHIRESON_PASSWORD: ${{ secrets.POETRY_HTTP_BASIC_SCHIRESON_PASSWORD }}
          POETRY_HTTP_BASIC_KNOWN_USERNAME: ${{ secrets.POETRY_HTTP_BASIC_KNOWN_USERNAME }}
          POETRY_HTTP_BASIC_KNOWN_PASSWORD: ${{ secrets.POETRY_HTTP_BASIC_KNOWN_PASSWORD }}
        run: |
          make build

      - name: Push Docker Images
        if: ${{ inputs.push }}
        run: |
          make push
