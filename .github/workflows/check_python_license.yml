name: Check python licenses

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
        description: >
          The name of the environment to run on. This defaults to
          'ubuntu-latest'
      working-directory:
        required: true
        type: string
        description: >
          The sub-directory to run commands out of
      python-version:
        required: false
        type: string
        default: "3.11.5"
        description: >
          The python version to utilize in workflow.

jobs:
  check-python-licenses:
    runs-on: ${{ inputs.runs-on }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v3
        id: setup-python
        with:
          python-version: ${{ inputs.python-version }}
        env:
          PYTHON_CONFIGURE_OPTS: --enable-shared --enable-optimizations

      - name: Check python licenses
        run: |
          pip install pip-licenses

          wget -O jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
          chmod +x ./jq
          sudo cp jq /usr/bin

          output=$(pip-licenses -f json --with-authors | jq '
            .[]
            | select(
                .License
                | contains("MIT")
                  or contains("BSD")
                  or contains("Apache")
                  or contains("LGPL")
                  or contains("Artistic License")
                  or contains("HPND")
                  or contains("ISCL")
                  or contains("MPL 2.0")
                  or contains("Public Domain")
                  or contains("WTFPL")
                  or contains("Zope Public")
                  or contains("Python Software Foundation")
                | not
              )
            | select (
                .Name
                | startswith("ma-")
                or startswith("media-activation-")
                or IN("ptpython")  # Improperly identified packages
                | not
              )
            | select (.Author == "Known" | not)
            ')
          if [[ $output = "" ]]; then
            echo 'No violations!'
          else
            echo "$output" | jq
            echo "Please read our Open-Source Software License Policy on your VPN"
            echo https://engineering.docs.known.is/engineering/open-source-software-license-policy/
            exit 1
          fi
